package bank.embedded.data.neo4j.util;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.neo4j.graphdb.Relationship;

import bank.spring.data.neo4j.util.MysqlConnection;
import net.sf.json.JSONObject;

public class UpdateRdbms {
	
	public  MysqlConnection mysqlConn= new MysqlConnection();
	ToD3FormatFromGraphDb td=new ToD3FormatFromGraphDb();
	//更新担保环数据
	public void updateRdb(Map<String, List<Map<String, Object>>> result,int skip,int length,String itemName) throws IOException{
		//System.out.println("更新担保环数据库");
		Connection conn = mysqlConn.GetSqlConnection();
		try {
		String sql = "INSERT INTO circledata VALUES (?,?,?,?)";
		PreparedStatement pst = conn.prepareStatement(sql);
		JSONObject json = JSONObject.fromObject(result);
		pst.setInt(1, length);
		pst.setInt(2, skip);
		pst.setString(3, json.toString());
		pst.setString(4,itemName);
		
		pst.executeUpdate();

		pst.close();
		//System.out.println("circleData已更新完成！");
		conn.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	//更新度中心性相关节点
	public void updateDegreeCentrality(Map<String, List<Map<String, Object>>> result,String itemName,Long startNodeId) throws IOException{
		
		Connection conn = mysqlConn.GetSqlConnection();
		try {
		String sql = "INSERT INTO degreeCentralityData VALUES (?,?,?)";
		PreparedStatement pst = conn.prepareStatement(sql);
		JSONObject json = JSONObject.fromObject(result);
		pst.setLong(1, startNodeId);
		pst.setString(2, itemName);
		pst.setString(3, json.toString());
		
		pst.executeUpdate();
		pst.close();
		conn.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	public void deleteTableData() throws IOException {
		System.out.println("清空担保环数据库");
		Connection conn=mysqlConn.GetSqlConnection();
		try {
			
				String sql1="truncate table circledata";
				Statement st1=conn.createStatement();
				st1.execute(sql1);
				System.out.println("清空circleData表成功！");
				String sql2="truncate table circledataoftop";
				Statement st2=conn.createStatement();
				st2.execute(sql2);
				System.out.println("清空circleDataoftop表成功！");
				//updateRdb(result,skip,length);
				conn.close();	
			}catch (SQLException e) {
				e.printStackTrace();
		}
		
	}
	
	public void updateTop10Circle(List<DbCircleInfo> top_tenOflength,List<DbCircleInfo> top_tenOftotalDBJE) throws IOException {
		
		System.out.println("更新前十大担保环数据库");
		Connection conn = mysqlConn.GetSqlConnection();
		
		
		
		Set<Relationship> relsOflength=new HashSet<>();
		Set<Relationship> relsofdbje=new HashSet<>();
		DbCircleInfo ci;
		List<Relationship> relationships;
		Map<String, List<Map<String, Object>>> resultOflength=new HashMap<String, List<Map<String, Object>>>();
		Map<String, List<Map<String, Object>>> resultOfdbje=new HashMap<String, List<Map<String, Object>>>();
		
	
		
		Iterator<DbCircleInfo> top_tenOflengthDCinfo=top_tenOflength.iterator();
		while(top_tenOflengthDCinfo.hasNext()) {
			ci=top_tenOflengthDCinfo.next();
			relationships=ci.getRelationships();
			relsOflength.addAll(relationships);
			relationships.clear();
		}
		
		resultOflength=td.toD3FormatByrel(relsOflength);
		try {
		String sql = "INSERT INTO circledataoftop VALUES (?,?)";
		PreparedStatement pst = conn.prepareStatement(sql);
		JSONObject json = JSONObject.fromObject(resultOflength);
		pst.setString(1, "TopOflength");
		pst.setString(2, json.toString());
		pst.executeUpdate();
		pst.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	
		
		Iterator<DbCircleInfo> top_tenOftotalDBJEDCinfo=top_tenOftotalDBJE.iterator();
		while(top_tenOftotalDBJEDCinfo.hasNext()) {
			ci=top_tenOftotalDBJEDCinfo.next();
			relationships=ci.getRelationships();
			relsofdbje.addAll(relationships);
			relationships.clear();
		} 
		
		resultOfdbje=td.toD3FormatByrel(relsofdbje);
		try {
		String sql = "INSERT INTO circledataoftop VALUES (?,?)";
		PreparedStatement pst = conn.prepareStatement(sql);
		JSONObject json = JSONObject.fromObject(resultOfdbje);
		pst.setString(1, "TopOfdbje");
		pst.setString(2, json.toString());
		pst.executeUpdate();
		pst.close();
		conn.close();
		}catch (SQLException e) {
			e.printStackTrace();
		}	
		System.out.println("circleDataOfTop已更新完成！");
		
	}
}
